name: Publish Release

on:
  repository_dispatch:
    types: [publish-release]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      widget_url:
        description: 'URL to download widget JS file'
        required: true
      release_notes:
        description: 'Release notes'
        required: false
        default: 'Manual release'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version || github.event.client_payload.version }}
      WIDGET_URL: ${{ github.event.inputs.widget_url || github.event.client_payload.artifacts.widget_js }}
      RELEASE_NOTES: ${{ github.event.inputs.release_notes || github.event.client_payload.notes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Download widget artifact
        run: |
          mkdir -p dist

          # Download the widget JavaScript file
          curl -L -o dist/assistant-widget.js \
            -H "Authorization: Bearer ${{ secrets.RELEASE_TOKEN }}" \
            "$WIDGET_URL"

          # Verify download
          if [ ! -f "dist/assistant-widget.js" ] || [ ! -s "dist/assistant-widget.js" ]; then
            echo "Error: Failed to download widget file"
            exit 1
          fi

          echo "Widget downloaded successfully"
          ls -la dist/

      - name: Update version
        run: |
          npm version $VERSION --no-git-tag-version
          echo "Updated to version $VERSION"

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: |
            ${{ env.RELEASE_NOTES }}

            ### Installation

            **CDN:**
            ```html
            <script src="https://cdn.jsdelivr.net/gh/ai-enhanced-engineer/chat-widget-dist@${{ env.VERSION }}/dist/assistant-widget.js"></script>
            ```

            **npm:**
            ```bash
            npm install @bot-brewers/chat-widget@${{ env.VERSION }}
            ```
          files: dist/assistant-widget.js

      - name: Commit version update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: release v$VERSION" || echo "No changes to commit"
          git push